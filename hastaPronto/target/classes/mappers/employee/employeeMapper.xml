<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">  
<mapper namespace="mappers.employee.employeeMapper">
  <sql id="baseColumn">
	EMP_NO, EMP_ID, EMP_PW, EMP_NAME, EMP_PH, EMP_EMAIL, EMP_ADDR, EMP_BIRTH, EMP_ACCOUNT, DEP_NO, EMP_REGIST
  </sql>
  <sql id="renamedBaseColumn">
  	EMP_NO empNo, EMP_ID empId, EMP_PW empPw, EMP_NAME empName, EMP_PH empPh, EMP_EMAIL empEmail, 
  	EMP_ADDR empAddr, EMP_BIRTH empBirth, EMP_ACCOUNT empAccount, DEP_NO depNo, EMP_REGIST empRegist
  </sql>
  <sql id="empNoSub">
	select nvl(max(emp_no), 10000000) + 1 from employees
  </sql>
  <insert id="insertEmployee" parameterType="emp">
  	insert into employees(<include refid="baseColumn"/>)
  	values((<include refid="empNoSub"/>), #{empId}, #{empPw}, #{empName}, #{empPh}, #{empEmail}, #{empAddr},
  	#{empBirth}, #{empAccount}, null, sysdate)
  </insert>
  <select id="getEmployees" parameterType="emp" resultType="emp">
  	select * 
  	from (select rownum rn, <include refid="renamedBaseColumn"/>
  		from (select <include refid="baseColumn"/> 
  			from employees
  			<where>
  				<if test="empId != null">
  					emp_id = #{empId}
  				</if>
  			</where>
  			order by emp_regist desc))
  	<where>
  		<if test="startEndPageDTO != null">
  			rn between #{startEndPageDTO.startRow} and #{startEndPageDTO.endRow}
  		</if>
  	</where>
  </select>
  <select id="getEmployeesCount" resultType="Integer">
  	select count(*)
  	from employees
  </select>
  <update id="updateEmployee" parameterType="emp">
  	update employees
  	set dep_no = #{depNo}, emp_ph = #{empPh}, emp_addr = #{empAddr}, emp_email = #{empEmail}
  	where emp_id = #{empId}
  </update>
  <delete id="deleteEmployee" parameterType="string">
  	delete from employees 
  	where emp_id = #{empId}
  </delete>
</mapper>