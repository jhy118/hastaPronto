<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.outsourcing.osMapper">
	<sql id="outsourcing">
		OS_NO, OS_NAME, BS_LICENSE, OS_ADDR, OS_BUSINESSNAME, REP_NAME, OS_TEL, OS_EMAIL
	</sql>
	<insert id="insertOs" parameterType="os">
		insert into OUTSOURCING (<include refid="outsourcing" />)
		values(board_seq.nextval, #{osName}, #{bsLicense},#{osAddr},#{osBusinessName},#{repName},
			#{osTel},#{osEmail})
	</insert>
	<sql id="osFile">
		OS_FILENUM, OS_ORIGINALFILENAME, OS_STOREDFILENAME, OS_FILESIZE
	</sql>
	<insert id="insertOsFile" parameterType="osFile">
		insert into OS_FILE (<include refid="osFile" />)
		values(board_seq.nextval, #{osOriginalfilename}, #{osStorefilename},#{osFilesize})
	</insert>
	<resultMap type="os" id="osResult">
		<id column="OS_NO" jdbcType="VARCHAR" property="osNo"/>
   		<result column="OS_NAME" jdbcType="VARCHAR" property="osName" />
   		<result column="BS_LICENSE" jdbcType="VARCHAR" property="bsLicense" />
   		<result column="OS_ADDR" jdbcType="VARCHAR" property="osAddr" />
   		<result column="OS_BUSINESSNAME" jdbcType="VARCHAR" property="osBusinessName" />
   		<result column="REP_NAME" jdbcType="VARCHAR" property="repName" />
   		<result column="OS_TEL" jdbcType="VARCHAR" property="osTel" />
   		<result column="OS_EMAIL" jdbcType="VARCHAR" property="osEmail" />
<!--    		<association property="insertOsFile"> -->
<!-- 	   		<id column="OS_FILENUM" jdbcType="VARCHAR" property="osFilenum"/> -->
<!-- 	   		<result column="OS_ORIGINALFILENAME" jdbcType="VARCHAR" property="osOriginalfilename" /> -->
<!-- 	   		<result column="OS_STOREDFILENAME" jdbcType="VARCHAR" property="osStorefilename" /> -->
<!-- 	   		<result column="OS_FILESIZE" jdbcType="VARCHAR" property="osFilesize" /> -->
<!-- 	   	</association> -->
	</resultMap>
	<resultMap type="osFile" id="osFileResult">
		<id column="OS_FILENUM" jdbcType="VARCHAR" property="osFilenum"/>
   		<result column="OS_ORIGINALFILENAME" jdbcType="VARCHAR" property="osOriginalfilename" />
   		<result column="OS_STOREDFILENAME" jdbcType="VARCHAR" property="osStorefilename" />
   		<result column="OS_FILESIZE" jdbcType="VARCHAR" property="osFilesize" />
	</resultMap>
	<select id="getOsList" parameterType="os" resultMap="osResult">
		select * 
			from (select rownum rn, <include refid="outsourcing" />
				from(select <include refid="outsourcing" />
					from OUTSOURCING
					<where>
						<if test="osNo != null">
							os_no = #{osNo}
						</if>
					</where>
					order by os_no asc))
		<if test="startEndPageDTO != null">
			where rn between #{startEndPageDTO.startRow}	and #{startEndPageDTO.endRow}
		</if>
	</select>
	<select id="getOsFileList" parameterType="osFile" resultMap="osFileResult">
		select * 
			from (select rownum rn, <include refid="osFile" />
				from(select <include refid="osFile" />
					from OS_FILE
					<where>
						<if test="osFilenum != null">
							OS_FILENUM = #{osFilenum}
						</if>
					</where>
				))
		<if test="startEndPageDTO != null">
			where rn between #{startEndPageDTO.startRow} and #{startEndPageDTO.endRow}
		</if>
	</select>
	<select id="listCount" resultType="int">
		select count(*) from OUTSOURCING
	</select>
	<update id="osUpdate" parameterType="os">
			update OUTSOURCING
			set 
				 OS_NAME = #{osName}, 
				 BS_LICENSE = #{bsLicense}, 
				 OS_ADDR = #{osAddr}, 
				 OS_BUSINESSNAME = #{osBusinessName}, 
				 REP_NAME = #{repName}, 
				 OS_TEL = #{osTel}, 
				 OS_EMAIL = #{osEmail}
			 where OS_NO = #{osNo}
	</update>
	<update id="osFileUpdate" parameterType="osFile">
			update OS_FILE
			set 
			<if test="osOriginalfilename != null">
				 OS_ORIGINALFILENAME = #{osOriginalfilename}, 
				 OS_STOREDFILENAME = #{osStorefilename}, 
				 OS_FILESIZE = #{osFilesize}
			</if>
			<if test="osOriginalfilename == null">
				 OS_ORIGINALFILENAME = null, 
				 OS_STOREDFILENAME = null, 
				 OS_FILESIZE = null
			</if>
			 where OS_FILENUM = #{osFilenum}
	</update>
<!-- 	<update id="osUpdate" parameterType="model.DTO.OsDTO"> -->
<!-- 		update users -->
<!-- 		<trim prefix="set" suffixOverrides=","> -->
<!-- 			 OS_NAME = #{osName},  -->
<!-- 				 BS_LICENSE = #{bsLicense},  -->
<!-- 				 OS_ADDR = #{osAddr},  -->
<!-- 				 OS_BUSINESSNAME = #{osBusinessName},  -->
<!-- 				 REP_NAME = #{repName},  -->
<!-- 				 OS_TEL = #{osTel},  -->
<!-- 				 OS_EMAIL = #{osEmail} -->
<!-- 		</trim> -->
<!-- 		where osNo = #{osNo} -->
<!-- 	</update> -->
	<delete id="osDelete" parameterType="String">
		delete from OUTSOURCING
		where os_no = #{osNo}
	</delete>
</mapper>