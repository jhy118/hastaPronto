<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.member.memberMapper">
	<sql id="baseColumn">
		USER_ID, USER_PASSWORD, USER_NAME, USER_PH, USER_EMAIL,
		USER_ADDR, USER_BIRTH, USER_GENDER, USER_REGIST
	</sql>
	<insert id="insertMember" parameterType="model.DTO.MemberDTO">
		insert into users (<include refid="baseColumn" />)
		values(#{userId},#{userPassword},#{userName},#{userPh},#{userEmail},
			#{userAddr},#{userBirth},#{userGender},sysdate)
	</insert>
	<resultMap type="model.DTO.MemberDTO" id="baseMember">
		<constructor>
			<idArg column="USER_ID" javaType="string"/>
			<arg column="USER_PASSWORD" javaType="string"/>
			<arg column="USER_NAME" javaType="string"/>
			<arg column="USER_PH" javaType="string"/>
			<arg column="USER_EMAIL" javaType="string"/>
			<arg column="USER_ADDR" javaType="string"/>
			<arg column="USER_BIRTH" javaType="java.util.Date"/>
			<arg column="USER_GENDER" javaType="string"/>
			<arg column="USER_REGIST" javaType="java.sql.Timestamp"/>
		</constructor>
	</resultMap>
	<select id="selectCount" resultType="int">
		select count(*) from users  
	</select>
	<select id="selectMember" resultMap="baseMember" parameterType="model.DTO.MemberDTO">
		select *
		from ( select ROWNUM RN, <include refid="baseColumn" />
			from (select <include refid="baseColumn" />
				from users
				<trim prefix="WHERE" prefixOverrides="AND | OR">
					<if test="userId != null">
						user_id = #{userId}
					</if>
				</trim>
				order by user_regist DESC))
				<trim prefix="where" prefixOverrides="and | or">
					<if test="startEndPageDTO != null">
						RN BETWEEN #{startEndPageDTO.startRow} AND #{startEndPageDTO.endRow}
					</if>
				</trim>
	</select>
	<update id="updateMember" parameterType="model.DTO.MemberDTO">
		update users
		<trim prefix="set" suffixOverrides=",">
			USER_PH = #{userPh},
			USER_EMAIL = #{userEmail},
			USER_ADDR = #{userAddr}
		</trim>
		where user_id = #{userId}
	</update>
	<delete id="deleteMember" parameterType="string">
		delete from users
		<where>
			<if test="value != null">
				user_id = #{userId}
			</if>
		</where>
	</delete>
</mapper>
