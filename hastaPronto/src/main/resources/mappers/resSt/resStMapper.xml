<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mappers.resSt.resStMapper">  
	<sql id="baseColumn">
		ODER_S_NO, ODER_S_NUM, ORER_S_CHAR, RT_RV_NO, USER_ID, RT_MENU_NO
	</sql>
	<sql id="baseColumn1">
		ODER_S_NO oderSno, ODER_S_NUM oderSnum, ORER_S_CHAR oderSchar, 
		RT_RV_NO rtRvNo, USER_ID userId, RT_MENU_NO rtMenuNo
	</sql>
	<!--  <insert id="insertResSt" parameterType="model.DTO.ResStDTO">
		insert into order_statement(<include refid="baseColumn" />)
		values(board_seq.nextval, 1, (select RT_MENU_CHAR from restaurant_menu where RT_MENU_NO =  #{rtMenuNo}), 
		#{rtRvNo}, #{userId}, #{rtMenuNo}) 
	</insert>-->
	<insert id="insertResSt" parameterType="model.DTO.ResStDTO">
		merge into order_statement o
	    using(select rt_menu_no, rt_menu_char from restaurant_menu where rt_menu_no = #{rtMenuNo}) r
	    on(o.rt_menu_no = r.rt_menu_no)
		when matched then
		    update set ODER_S_NUM = ODER_S_NUM + 1,
		    ORER_S_CHAR = ORER_S_CHAR + rt_menu_char
		when not MATCHED then
		    insert(ODER_S_NO, ODER_S_NUM, ORER_S_CHAR, RT_RV_NO, USER_ID, RT_MENU_NO)
		    values(board_seq.nextval , 1, rt_menu_char, #{rtRvNo}, #{userId}, #{rtMenuNo})
	</insert>
	
	<resultMap type="model.DTO.ResStDTO" id="resSt">
		<result column="RT_RV_NO" jdbcType="VARCHAR" property="rtRvNo"/>
		<result column="ODER_S_NUM" jdbcType="BIGINT" property="oderSnum"/>
		<result column="ORER_S_CHAR" jdbcType="VARCHAR" property="oderSchar"/>
		<result column="RT_MENU_NO" jdbcType="VARCHAR" property="rtMenuNo"/>
		<association property="resmenuDTO" javaType="model.DTO.ResmenuDTO" >
			<result column="RT_MENU" jdbcType="VARCHAR" property="rtMenu"/> 
		</association>
	</resultMap>
	<select id="selectResSt" parameterType="model.DTO.ResStDTO" resultMap="resSt">
		select RT_MENU, ODER_S_NUM, ORER_S_CHAR ,RT_RV_NO, m1.RT_MENU_NO
				from order_statement o1, restaurant_menu m1
				<trim prefix="where" prefixOverrides="and | or">
					o1.RT_MENU_NO = m1.RT_MENU_NO and RT_RV_NO = #{rtRvNo}
				</trim>
	</select>
	<select id="countResSt" resultType="integer">
		select count(*) from order_statement
	</select>
	<update id="resStQtyDown" parameterType="model.DTO.ResStDTO">
		update order_statement
		set ODER_S_NUM = ODER_S_NUM - 1, ORER_S_CHAR = (ODER_S_NUM - 1) * (select RT_MENU_CHAR from restaurant_menu where RT_MENU_NO = #{rtMenuNo}) 
		where RT_MENU_NO = #{rtMenuNo} and RT_RV_NO = #{rtRvNo}
	</update>
	<delete id="resStRemove" parameterType="hashMap">
		delete from order_statement
		where RT_MENU_NO IN
		<foreach collection="rtMenuNos" item="rtMenuNo" index="index" open="(" close=")" separator=",">
			#{rtMenuNo}
		</foreach>

	</delete>
</mapper>